# Process this file with autoconf to produce a configure script.

AC_INIT(inetd/inetd.c)

# These lists don't contain talk or talkd, which will get added later if nec.
COMMON='libtelnet libinetutils'
SERVERS='inetd ftpd telnetd rshd rlogind uucpd rexecd syslogd tftpd'
CLIENTS='telnet ftp rsh rcp rlogin tftp syslog'
AC_SUBST(COMMON)
AC_SUBST(SERVERS)
AC_SUBST(CLIENTS)

# All subdirectories, whether built or not
SUBDIRS="$SERVERS $CLIENTS $COMMON"
AC_SUBST(SUBDIRS)

AC_ARG_ENABLE(encryption, [  --enable-encryption     enable encryption],
	      , enable_encryption=no)
AC_ARG_ENABLE(authentication,
	      [  --enable-authentication enable connection authentication],
	      , enable_authentication=no)
# By default we compile both servers and clients, but see what the user wants
AC_ARG_ENABLE(servers, [  --disable-servers       don't compile servers],
	      , enable_servers=yes)
AC_ARG_ENABLE(clients, [  --disable-clients       don't compile clients],
	      , enable_clients=yes)

AC_ARG_ENABLE(talk,    [  --disable-talk          don't compile talk or talkd],
              , enable_talk=maybe)

AC_PROG_MAKE_SET

AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_YACC
AC_CHECK_TOOL(AR, ar)
AC_CHECK_TOOL(RANLIB, ranlib, :)
AC_PATH_PROG(RM, rm, rm)

AC_CHECK_HEADERS(malloc.h termio.h termios.h sys/tty.h sys/utsname.h \
		 sys/msgbuf.h krb.h des.h netinet/in_systm.h \
		 netinet/ip.h netinet/ip_icmp.h netinet/ip_var.h paths.h)
AC_CHECK_FUNCS(cgetent uname strdup)
AC_CHECK_LIB(util, logout)
if test "$enable_encryption" = yes -o "$enable_authentication" = yes; then
  AC_CHECK_LIB(krb, krb_mk_req)
  AC_CHECK_LIB(des, des_key_sched)
fi
if test "$enable_talk" != no; then
  AC_CHECK_LIB(curses, printw)
fi
AC_TYPE_SIGNAL

# Use `setpgid' if it's around, otherwise assume a BSD setpgrp
AC_CHECK_FUNC(setpgid, , AC_DEFINE(setpgid, setpgrp))

if test "$enable_talk" = maybe; then
  enable_talk=$ac_cv_lib_curses
fi

AC_CACHE_CHECK(whether struct stat has timespec fields,
	       inetutils_cv_struct_st_timespec,
AC_TRY_COMPILE(
[#include <sys/types.h>
#include <sys/stat.h>],
[struct stat st; st.st_mtimespec.ts_nsec = 0;],
[inetutils_cv_struct_st_timespec=yes],
[inetutils_cv_struct_st_timespec=no]))

if test "$inetutils_cv_struct_st_timespec" = yes; then
  AC_DEFINE(HAVE_ST_TIMESPEC)
else
AC_CACHE_CHECK(whether struct stat has time_usec fields,
	       inetutils_cv_struct_st_time_usec,
AC_TRY_COMPILE(
[#include <sys/types.h>
#include <sys/stat.h>],
[struct stat st; st.st_mtime_usec = 0;],
[inetutils_cv_struct_st_time_usec=yes],
[inetutils_cv_struct_st_time_usec=no]))

if test "$inetutils_cv_struct_st_time_usec" = yes; then
  AC_DEFINE(HAVE_ST_TIME_USEC)
fi
fi

if test "$enable_talk" = yes; then
  SERVERS="$SERVERS talkd"
  CLIENTS="$CLIENTS talk"
fi
# Update SUBDIRS regardless
SUBDIRS="$SUBDIRS talkd talk"

SERVERS_OR_CLIENTS=
if test "$enable_servers" = yes; then
  SERVERS_OR_CLIENTS="$SERVERS"
fi
if test "$enable_clients" = yes; then
  SERVERS_OR_CLIENTS="$SERVERS_OR_CLIENTS $CLIENTS"
fi
AC_SUBST(SERVERS_OR_CLIENTS)

if test "$enable_authentication" = yes; then
  AC_DEFINE(AUTHENTICATION)
fi
if test "$enable_encryption" = yes; then
  AC_DEFINE(ENCRYPTION)
fi

if test "$enable_authentication" = yes -a "$ac_cv_lib_krb" = yes; then
  AC_DEFINE(KRB4)
fi
if test "$enable_encryption" = yes -a "$ac_cv_lib_des" = yes; then
  AC_DEFINE(DES_ENCRYPTION)
fi

# Optional things we put into libinetutils (we use the name `LIBOBJS' because
# that's what AC_REPLACE_FUNCS uses).
LIBOBJS=''
AC_SUBST(LIBOBJS)

# include files for libinetutils that we use
LIB_INCLUDES=version.h

# We use our own version of getopt if the system one doesn't have getopt_long
AC_CHECK_FUNC(getopt_long, ,
  LIB_INCLUDES="$LIB_INCLUDES getopt.h"
  LIBOBJS="$LIBOBJS getopt.o getopt1.o")

# Supply optional header files by linking a copy into the object include dir
_ISRCS="`for I in $LIB_INCLUDES; do echo $ac_n " libinetutils/$I$ac_c"; done`"
_IDSTS="`for I in $LIB_INCLUDES; do echo $ac_n " include/$I$ac_c"; done`"
AC_LINK_FILES($_ISRCS, $_IDSTS)

SUBDIR_MAKEFILES="`for D in $SUBDIRS; do echo $ac_n " $D/Makefile$ac_c"; done`"
AC_OUTPUT(Makefile config.make $SUBDIR_MAKEFILES)
